[{"E:\\Projects\\weather-ts\\src\\index.tsx":"1","E:\\Projects\\weather-ts\\src\\theme.ts":"2","E:\\Projects\\weather-ts\\src\\App.tsx":"3","E:\\Projects\\weather-ts\\src\\pages\\landing-page.tsx":"4","E:\\Projects\\weather-ts\\src\\pages\\weather-page.tsx":"5","E:\\Projects\\weather-ts\\src\\api.ts":"6"},{"size":378,"mtime":1610366563019,"results":"7","hashOfConfig":"8"},{"size":161,"mtime":1610392860919,"results":"9","hashOfConfig":"8"},{"size":1981,"mtime":1611004206318,"results":"10","hashOfConfig":"8"},{"size":3573,"mtime":1611005470225,"results":"11","hashOfConfig":"8"},{"size":1915,"mtime":1611006038740,"results":"12","hashOfConfig":"8"},{"size":1471,"mtime":1611004834881,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"a582dc",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"24","messages":"25","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"E:\\Projects\\weather-ts\\src\\index.tsx",[],["28","29"],"E:\\Projects\\weather-ts\\src\\theme.ts",[],"E:\\Projects\\weather-ts\\src\\App.tsx",["30","31"],"import React, {useState, useEffect} from 'react';\nimport {Route, Switch, withRouter} from 'react-router-dom';\nimport {createGlobalStyle} from 'styled-components';\nimport styled from 'styled-components';\n\nimport ComfortaaFont from './assets/fonts/Comfortaa-VariableFont_wght.ttf';\n\nimport LandingPage from './pages/landing-page';\nimport WeatherPage from './pages/weather-page';\n\nimport {UserLocationObject, SetLocationFunction} from './types';\n\nconst GlobalStyle = createGlobalStyle`\n  @font-face {\n    font-family: Comfortaa;\n    src: url(${ComfortaaFont});\n  }\n  * {\n    box-sizing: border-box;\n    font-family: Comfortaa;\n    color: ${(props: any) => props.theme.customBlack};\n  }\n  html, body, #root {\n    width: 100%;\n    height: 100%;\n    min-height: 100%;\n    margin: 0;\n    padding: 0;\n  }\n  html {\n    font-size: 16px;\n  }\n  body {\n    background-color: #fff;\n  }\n  p {\n    margin: 0;\n  }\n`\n\nconst HeaderLink = styled.a`\n  position: absolute;\n  top: 60px;\n  left: 100px;\n  font-size: 0.9rem;\n`;\n\nconst Footer = styled.footer`\n  width: 100%;\n  position: absolute;\n  bottom: 20px;\n  text-align: center;\n  a {\n    font-size: 0.8rem;\n  }\n`;\n\nconst App = ({history}:any) => {\n\n  const [userLocation, changeUserLocation] = useState<UserLocationObject>({});\n\n  const setUserLocation: SetLocationFunction = (geoUserLocation) => changeUserLocation(geoUserLocation);\n\n  useEffect(() => {\n    if(Object.keys(userLocation).length != 0) {\n      history.push(\"/weather\");\n    }\n  }, [userLocation]);\n\n  return (\n    <>\n      <GlobalStyle />\n      <HeaderLink href=\"https://sw-weather.netlify.app\">weather app</HeaderLink>\n      <Switch>\n        <Route exact path=\"/\" render={() => <LandingPage setUserLocation={setUserLocation}/>} />\n        <Route exact path=\"/weather\" render={() => <WeatherPage userLocation={userLocation} />}/>\n      </Switch>\n      <Footer>\n        <a href=\"https://darksky.net\">Powered by DarkSky</a>\n      </Footer>\n    </>\n  )\n}\n\nexport default withRouter(App);\n","E:\\Projects\\weather-ts\\src\\pages\\landing-page.tsx",["32"],"E:\\Projects\\weather-ts\\src\\pages\\weather-page.tsx",["33","34","35","36","37"],"E:\\Projects\\weather-ts\\src\\api.ts",[],{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","severity":1,"message":"43","line":65,"column":41,"nodeType":"44","messageId":"45","endLine":65,"endColumn":43},{"ruleId":"46","severity":1,"message":"47","line":68,"column":6,"nodeType":"48","endLine":68,"endColumn":20,"suggestions":"49"},{"ruleId":"50","severity":1,"message":"51","line":87,"column":7,"nodeType":"52","messageId":"53","endLine":87,"endColumn":14},{"ruleId":"50","severity":1,"message":"54","line":2,"column":8,"nodeType":"52","messageId":"53","endLine":2,"endColumn":14},{"ruleId":"50","severity":1,"message":"55","line":15,"column":12,"nodeType":"52","messageId":"53","endLine":15,"endColumn":26},{"ruleId":"50","severity":1,"message":"56","line":15,"column":28,"nodeType":"52","messageId":"53","endLine":15,"endColumn":43},{"ruleId":"50","severity":1,"message":"57","line":17,"column":11,"nodeType":"52","messageId":"53","endLine":17,"endColumn":21},{"ruleId":"46","severity":1,"message":"58","line":47,"column":8,"nodeType":"48","endLine":47,"endColumn":22,"suggestions":"59"},"no-native-reassign",["60"],"no-negated-in-lhs",["61"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["62"],"@typescript-eslint/no-unused-vars","'Spinner' is assigned a value but never used.","Identifier","unusedVar","'styled' is defined but never used.","'recentSearches' is assigned a value but never used.","'setRecentSearch' is assigned a value but never used.","'getGeocode' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getForecast'. Either include it or remove the dependency array.",["63"],"no-global-assign","no-unsafe-negation",{"desc":"64","fix":"65"},{"desc":"66","fix":"67"},"Update the dependencies array to be: [history, userLocation]",{"range":"68","text":"69"},"Update the dependencies array to be: [getForecast, userLocation]",{"range":"70","text":"71"},[1477,1491],"[history, userLocation]",[1782,1796],"[getForecast, userLocation]"]